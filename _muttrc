# -*-muttrc-*-
set from=m@krasm.net
set realname="marcin"

set folder="~/mail/"
set mask="!^\\.[^.]"
set record="+.Sent"
set postponed="+.Drafts"
set spoolfile="~/mail/gmail/INBOX"
set mbox_type=Maildir

mailboxes +gmail/INBOX \
          +krasm/INBOX
          +oranmorebeavers/INBOX \
          +gmail/cding\ problem \
          +gmail/aikido \
          +gmail/cryptogram \
          +gmail/tech \
          +gmail/\[Gmail\]/Sent\ Mail \


set sendmail="~/opt/bin/msmtp-enqueue.sh"

set use_from=yes
set envelope_from=yes

#set editor=vim
#set pager=vim

# LOCAL FOLDERS FOR CACHED HEADERS AND CERTIFICATES
set alias_file       = ~/.mutt/alias         # where to store aliases
set header_cache     = ~/.mutt/cache/headers # where to store headers
set message_cachedir = ~/.mutt/cache/bodies  # where to store bodies
set certificate_file = ~/.mutt/certificates  # where to store certs
set mailcap_path     = ~/.mailcap       # entries for filetypes
set tmpdir           = ~/.mutt/temp          # where to keep temp files

# Header Options -------------------------------------
ignore *                                # ignore all headers
unignore from: to: cc: date: subject:   # show only these
unhdr_order *                           # some distros order things by default
hdr_order from: to: cc: date: subject:  # and in this order

bind index g noop
macro index gi "<change-folder>=INBOX<enter>" "Go to inbox"
macro index ga "<change-folder>=[Google Mail]/All Mail<enter>" "Go to all mail"
macro index gs "<change-folder>=[Google Mail]/Sent Mail<enter>" "Go to Sent Mail"
macro index gd "<change-folder>=[Google Mail]/Drafts<enter>" "Go to drafts"

macro index t "<pipe-message>mutt2task<enter> <save-message>+TODO<enter>"

auto_view text/html
alternative_order text/plain text/enriched text/html

set sidebar_visible=yes
# Move the highlight to the previous mailbox
bind index,pager \Cp sidebar-prev
# Move the highlight to the next mailbox
bind index,pager \Cn sidebar-next
# Open the highlighted mailbox
bind index,pager \Co sidebar-open
# Move the highlight to the previous mailbox containing new, or flagged mail.
bind index,pager <F5> sidebar-prev-new
# Move the highlight to the next mailbox containing new, or flagged, mail.
bind index,pager <F6> sidebar-next-new
# Toggle the visibility of the Sidebar.
bind index,pager B sidebar-toggle-visible

# colors
#source $HOME/.mutt/mutt-colors-solarized-light-16.muttrc

set crypt_use_gpgme=yes
set pgp_decode_command="gpg --status-fd=2 %?p?--passphrase-fd 0 --pinentry-mode=loopback? --no-verbose --quiet --batch --output - %f"
set pgp_verify_command="gpg --status-fd=2 --no-verbose --quiet --batch --output - --verify %s %f"
set pgp_decrypt_command="gpg --status-fd=2 %?p?--passphrase-fd 0 --pinentry-mode=loopback? --no-verbose --quiet --batch --output - %f"
set pgp_sign_command="gpg --no-verbose --batch --quiet --output - %?p?--passphrase-fd 0 --pinentry-mode=loopback? --armor --detach-sign --textmode %?a?-u %a? %f"
set pgp_clearsign_command="gpg --no-verbose --batch --quiet --output - %?p?--passphrase-fd 0 --pinentry-mode=loopback? --armor --textmode --clearsign %?a?-u %a? %f"
set pgp_encrypt_only_command="/usr/lib/mutt/pgpewrap gpg --batch --quiet --no-verbose --output - --encrypt --textmode --armor --always-trust -- -r %r -- %f"
set pgp_encrypt_sign_command="/usr/lib/mutt/pgpewrap gpg %?p?--passphrase-fd 0 --pinentry-mode=loopback? --batch --quiet --no-verbose --textmode --output - --encrypt --sign %?a?-u %a? --armor --always-trust -- -r %r -- %f"
set pgp_import_command="gpg --no-verbose --import %f"
set pgp_export_command="gpg --no-verbose --export --armor %r"
set pgp_verify_key_command="gpg --verbose --batch --fingerprint --check-sigs %r"
set pgp_list_pubring_command="gpg --no-verbose --batch --quiet --with-colons --with-fingerprint --with-fingerprint --list-keys %r"
set pgp_list_secring_command="gpg --no-verbose --batch --quiet --with-colons --with-fingerprint --with-fingerprint --list-secret-keys %r"

# fetch keys
# set pgp_getkeys_command="pkspxycwrap %r"

# pattern for good signature - may need to be adapted to locale!

# set pgp_good_sign="^gpgv?: Good signature from "

# OK, here's a version which uses gnupg's message catalog:
# set pgp_good_sign="`gettext -d gnupg -s 'Good signature from "' | tr -d '"'`"

# This version uses --status-fd messages
set pgp_good_sign="^\\[GNUPG:\\] GOODSIG"

# pattern to verify a decryption occurred
set pgp_decryption_okay="^\\[GNUPG:\\] DECRYPTION_OKAY"

#set pgp_default_key=3072R/324EE30B
#set pgp_use_gpg_agent
